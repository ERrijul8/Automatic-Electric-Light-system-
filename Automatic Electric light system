import RPi.GPIO as GPIO  # Use for Raspberry Pi; replace with appropriate library for other platforms
import time

# Pin configuration
LIGHT_SENSOR_PIN = 18  # GPIO pin for LDR (analog input via ADC, e.g., MCP3008)
RELAY_PIN = 23         # GPIO pin for relay controlling the bulb

# Light threshold (0-1023 for 10-bit ADC, adjust based on sensor calibration)
LIGHT_THRESHOLD = 500  # Bulb turns on if light level is below this value

# Setup GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setup(RELAY_PIN, GPIO.OUT)
GPIO.output(RELAY_PIN, GPIO.HIGH)  # Relay off initially (HIGH = off for most relay modules)

# Simulate ADC reading for LDR (replace with actual ADC library if needed, e.g., Adafruit_MCP3008)
def read_light_sensor():
    # Placeholder: Returns a value between 0 (dark) and 1023 (bright)
    # In a real setup, use an ADC library to read the LDR value
    return 300  # Simulate a light reading for testing (replace with actual ADC read)


        GPIO.cleanup()  # Reset GPIO pins

if __name__ == "__main__":
    print("Starting automatic bulb control...")
    control_bulb()
